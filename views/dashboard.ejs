<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>LDM dashboard</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous">

    <style>
      *{
        box-sizing: border-box;
        margin: 0;
        padding: 0;
      }
      a{
        text-decoration: none;
      }
      h3{
        margin-bottom:0 !important
      }
        body{
            background-color: #e9efff;
          }
          #content{
          height: 100vh;
                display: grid;
                margin: 0 auto;
                /* margin-top: 67px !important; */
                grid-template-columns: repeat(5, 1fr);
                grid-template-rows: repeat(5);
            
            }
            .one{
                grid-column: 1/2;
                grid-row: 1/2;
                /* background-color: blue; */
            }
            .two{
                grid-column: 2/3;
                grid-row: 1/2;
                /* background-color: yellow; */
            }
            .three{
                grid-column: 3/4;
                grid-row: 1/2;
                /* background-color: orange; */
            }
            .four{
                grid-column: 4/6;
                grid-row: 1/6;
                overflow: scroll;
                /* background-color: purple; */
            }
            .five{
                grid-column: 1/4;
                grid-row: 2/4;
                /* background-color: indianred; */
            }
            .six{
                grid-column: 1/4;
                grid-row: 4/6;
                /* background-color: green; */
            }
            .seven{
                grid-column: 4/6;
                grid-row: 3/6;
                /* background-color: rgb(107, 0, 128); */
            }
            #box1{
              display: none;
            }
            #box2{
              display: none;
            }
            .change{
              cursor: pointer;
            }
            .change:hover{
              background-color: #a4baf7;
              font-size: 18px;
            }
            .rev{
              margin-bottom: 0!important;
            }
            .bgbox {
  position: relative;
  text-align: center;
  color: white;
}
            .centered {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}
    </style>
    <script>
      let data;
      // addEventListener
      function myFunction() {
         data=document.getElementById("myText").value;
        console.log("data",data);
}
function direct(){
  myFunction()
  window.location.href = "result/"+data;
}
    </script>
  </head>
  <!-- class="col d-flex justify-content-center pt-5" style="width: 90%; margin: auto;" -->
  <body style="position: relative;">
    <div class="bgbox">
      <img src="images/logo.jpeg" alt="" width="100%" height="150px" style="-webkit-filter: blur(3px);">
      <div class="centered"><h3>LAWRENCE DEMONSTRATION SCHOOL</h3></div>
    </div>
    <nav class="navbar navbar-expand-lg bg-body-tertiary" style="background-color: #4E6166;" >
      <div class="container-fluid">
        <a class="navbar-brand text-white" href="#">MockRoom</a>
        <button class="navbar-toggler text-white" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavAltMarkup" aria-controls="navbarNavAltMarkup" aria-expanded="false" aria-label="Toggle navigation">
          <span class="navbar-toggler-icon text-white"></span>
        </button>
        <div class="collapse navbar-collapse ms-lg-5" id="navbarNavAltMarkup">
          <div class="navbar-nav">
            <a class="nav-link text-white mx-3 active" aria-current="page" href="#">Create mock</a>
            <a class="nav-link text-white mx-3" href="#">All mocks</a>
          </div>
        </div>
      </div>
    </nav>

<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h1 class="modal-title fs-5" id="exampleModalLabel"><h5>Add A Mock</h5></h1>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form action="/mock" method="post">
          <input type="text" placeholder="Enter mock name" name="mockName" class="form-control">
          <input class="btn btn-primary mt-4" type="submit" value="Create Mock">
        </form> 
      </div>
    </div>
  </div>
</div>
  <div id="content">
    <a href="/stats/<%=mockId%>" class="one text-dark m-3 rounded-4 d-flex mx-3 flex-column align-items-center justify-content-center shadow p-3 change">View Stats</a>
    
    <a type="button" data-bs-toggle="modal" data-bs-target="#exampleModal" class="two text-dark m-3 rounded-4  d-flex mx-3 flex-column align-items-center justify-content-center shadow p-3 change">
    Create Mock</a>

    <div class="three m-3 d-flex flex-column rounded-4 justify-content-between">
      <p>Choose mock to view results</p>
      <div class="rounded-4" style="height: 45%;">
        <div class="form-group">
          <select class="form-control" id="myText" name="mockId" onchange="myFunction()">
            <% mock.forEach((item)=>{ %>
             
              <option value="<%= item._id %>" id="getr"><%= item.mockName %></option>
              <% }) %>
          </select>
      </div>
      </div>
      <a class="shadow rounded-2 align-items-center justify-content-center d-flex change mt-1" style="height: 45%;" onclick="direct()">
      Get Result
      </a>
    </div>
    <div class="four m-3 rounded-4 shadow p-3">
      <h3 class="border-bottom border-2 pb-2">Students</h3>
      <% students.forEach((item)=>{ %>
      <div class="d-flex align-items-center justify-content-between border-bottom py-2">
        <p class="rev"><%= item.name %></p>
        <p class="rev">aggregate: <%= item.aggregate %></p>
        <div class="d-flex">
          <a class="btn btn-warning" href="" role="button">edit</a>
          <form action="/deletestudent" method="post">
            <input type="text" hidden name="studentId" value="<%= item._id %>">
            <input type="text" hidden name="mockId" value="<%= item.mockId %>">
            <input type="text" hidden name="studentname" value="<%= item.name %>">
            <!-- <a class="btn btn-danger" href="deletestudent/<%= item._id %>" role="button">delete</a> -->
            <button type="submit" class="mb-2 btn btn-danger ms-2 rev" >delete</button>
          </form>
        <!-- <button type="submit" class="mb-2 btn btn-warning rev" >edit</button> -->
        </div>
      </div>
      <% }) %>
    </div>
    
    <div class="five m-3 d-flex align-items-center">
      <div class="shadow p-3 rounded-4" style="width: 80%; margin: auto;">
        <div class="d-flex align-items-center mb-4">
          <img src="images/logo.jpeg" class="rounded-circle me-2" alt="" width="50px">
          <h3>Create Student</h3>
        </div>
        <form action="/student" method="post">
            <div class="form-group mt-3">
              <label for="exampleInputEmail1">Student Name</label>
              <input type="text" class="form-control" id="exampleInputEmail1"y placeholder="Nii-Gyan Christian" name="studentname" required>
             
            </div>
            <div class="form-group my-4">
              <label for="exampleFormControlSelect1">Select mock this student enrolled in</label>
              <select class="form-control" id="myText" name="mockId" onchange="myFunction()">
                <% mock.forEach((item)=>{ %>
                 
                  <option value="<%= item._id %>" id="getr"><%= item.mockName %></option>
                  <% }) %>
              </select>
            </div>
            <div class="row">
                <div class="col">
                    <div class="form-group">
                        <label for="exampleInputEmail1">English</label>
                        <input type="number" min="0" max="100" class="form-control" id="exampleInputEmail1"y placeholder="100%" name="English" required>
                       
                      </div>
                      <div class="form-group">
                        <label for="exampleInputEmail1">Maths</label>
                        <input type="number" min="0" max="100" class="form-control" id="exampleInputEmail1"y placeholder="100%" name="Maths" required>
                       
                      </div>
                      <div class="form-group">
                        <label for="exampleInputEmail1">Social</label>
                        <input type="number" min="0" max="100" class="form-control" id="exampleInputEmail1"y placeholder="100%" name="Social" required>
                       
                      </div>
                      <div class="form-group">
                        <label for="exampleInputEmail1">Science</label>
                        <input type="number" min="0" max="100" class="form-control" id="exampleInputEmail1"y placeholder="100%" name="Science" required>
                       
                      </div>
                      <div class="form-group">
                        <label for="exampleInputEmail1">BDT</label>
                        <input type="number" min="0" max="100" class="form-control" id="exampleInputEmail1"y placeholder="100%" name="BDT" required>
                       
                      </div>
                      
                </div>
                <div class="col">
                    <div class="form-group">
                        <label for="exampleInputEmail1">RME</label>
                        <input type="number" min="0" max="100" class="form-control" id="exampleInputEmail1"y placeholder="100%" name="RME" required>
                       
                      </div>
                      <div class="form-group">
                        <label for="exampleInputEmail1">ICT</label>
                        <input type="number" min="0" max="100" class="form-control" id="exampleInputEmail1"y placeholder="100%" name="ICT" required>
                       
                      </div>
                      <div class="form-group">
                        <label for="exampleInputEmail1">TWI</label>
                        <input type="number" min="0" max="100" class="form-control" id="exampleInputEmail1"y placeholder="100%" name="TWI" required>
                       
                      </div>
                      <div class="form-group">
                        <label for="exampleInputEmail1">French</label>
                        <input type="number" min="0" max="100" class="form-control" id="exampleInputEmail1"y placeholder="100%" name="French" required>
                       
                      </div>
                   
                    
                </div>
            
           
            </div>
            <div class="row mt-4 mx-2">
              <button type="submit" class="mb-2 btn btn-primary" >Add Student</button>
          </div>
         
          </form>
        </div>
        
    
    </div>

  </div>
  <footer style="margin-top: 200px; background: #4e6166; color: white;">
   <div class="align-content-center p-2 d-flex " style="height: auto; width: 60%;">
      <a href="#" class="text-dark h3 align-content-center align-items-center text-white">MockRoom</a>
      <div class=" ms-5 mt-2 d-flex">
        <p class="text-dark h5 text-white">Useful links</p>
        <div class="d-flex ms-2">
          <a href="#" class="text-dark d-block text-white">| Create mock</a>
          <a href="#" class="text-dark d-block ms-2 text-white">| All Mocks</a>
        </div>
      </div>
      
   </div>
   <p class="d-flex justify-content-end mx-4 text-white">copyright &copy; Nii-Gyan Christian</p>

  </footer>


  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

  <script>
    const ctx = document.getElementById('myChart');
  
    new Chart(ctx, {
      type: 'bar',
      data: {
        labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],
        datasets: [{
          label: '# of Votes',
          data: [12, 19, 3, 5, 2, 3],
          borderWidth: 1
        }]
      },
      options: {
        scales: {
          y: {
            beginAtZero: true
          }
        }
      }
    });
  </script>
  <script>
    const ctx2 = document.getElementById('myChart2');
  
    new Chart(ctx2, {
      type: 'doughnut',
       data : {
  labels: [
    'Red',
    'Blue',
    'Yellow'
  ],
  datasets: [{
    label: 'My First Dataset',
    data: [300, 50, 100],
    backgroundColor: [
      'rgb(255, 99, 132)',
      'rgb(54, 162, 235)',
      'rgb(255, 205, 86)'
    ],
    hoverOffset: 4
  }]
},
    });
  </script>
  <script>
    const ctx3 = document.getElementById('myChart3');
  
    new Chart(ctx3, {
      // type: 'doughnut',
      type: 'radar',
  data : {
  labels: [
    'Eating',
    'Drinking',
    'Sleeping',
    'Designing',
    'Coding',
    'Cycling',
    'Running'
  ],
  datasets: [{
    label: 'My First Dataset',
    data: [65, 59, 90, 81, 56, 55, 40],
    fill: true,
    backgroundColor: 'rgba(255, 99, 132, 0.2)',
    borderColor: 'rgb(255, 99, 132)',
    pointBackgroundColor: 'rgb(255, 99, 132)',
    pointBorderColor: '#fff',
    pointHoverBackgroundColor: '#fff',
    pointHoverBorderColor: 'rgb(255, 99, 132)'
  }, {
    label: 'My Second Dataset',
    data: [28, 48, 40, 19, 96, 27, 100],
    fill: true,
    backgroundColor: 'rgba(54, 162, 235, 0.2)',
    borderColor: 'rgb(54, 162, 235)',
    pointBackgroundColor: 'rgb(54, 162, 235)',
    pointBorderColor: '#fff',
    pointHoverBackgroundColor: '#fff',
    pointHoverBorderColor: 'rgb(54, 162, 235)'
  }]
},
  options: {
    elements: {
      line: {
        borderWidth: 3
      }
    }
  },

    });
  </script>
  <script>
    const ctx4 = document.getElementById('myChart4');
    new Chart(ctx4, {
  type: 'line',
 data : {
  labels: ['Eating',
    'Drinking',
    'Sleeping',
    'Designing',
    'Coding',
    'Cycling',
    'Running',
    'Sleeping',
    'Designing',
    'Coding',
    'Cycling',
    'Running',
  ],
  datasets: [{
    label: 'My First Dataset',
    data: [65, 59, 80, 81, 56, 55, 40,80, 81, 56, 55, 40],
    fill: true,
    borderColor: 'rgb(75, 192, 192)',
    tension: 0.1
  }]
}

    });
  </script>

<script src=
"https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.9.2/html2pdf.bundle.js">
    </script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4" crossorigin="anonymous"></script>
</body>
</html>